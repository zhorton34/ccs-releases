name: Sync Release & Update releases.json
on:
  workflow_dispatch:
jobs:
  sync-releases:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 
      - name: Install Git
        run: sudo apt-get update && sudo apt-get install git
      
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      
      - name: Setup GitHub CLI
        run: |
          echo ${{ secrets.GH_AUTH_TOKEN }} | gh auth login --with-token

      - name: Get Latest Tag from Source Repository
        run: |
          latestTag=$(gh release view --repo zhorton34/ccs --json tagName -q ".tagName")
          echo "Latest Tag in Source Repo: $latestTag"
          echo "latestTag=$latestTag" >> $GITHUB_ENV

      - name: Get Latest Tag from Target Repository
        run: |
          hasLatestTag=$(gh release view --repo zhorton34/ccs-releases --json tagName -q ".tagName" || echo "")
          echo "Latest Tag in Target Repo: $hasLatestTag"
          echo "hasLatestTag=$hasLatestTag" >> $GITHUB_ENV

      - name: Sync Release if Needed
        if: env.latestTag != env.hasLatestTag
        run: |
          echo "Syncing release ${{ env.latestTag }}"
          mkdir -p tmp
          gh release download ${{ env.latestTag }} --repo zhorton34/ccs --dir=tmp
          gh release create ${{ env.latestTag }} --repo zhorton34/ccs-releases --title "Release ${{ env.latestTag }}" --notes "Automatically synced from zhorton34/ccs" tmp/*
          

      - name: Cleanup Artifacts
        if: failure()
        run: |
          if [ -d "tmp" ]; then
            echo "Cleaning up temporary artifacts in 'tmp'"
          rm -rf tmp
          else
            echo "Directory 'tmp' not found. Skipping cleanup"
          fi

      - name: Update releases.json
        run: |
          # 1. Download releases.json
          curl -L -o latest.json https://raw.githubusercontent.com/zhorton34/ccs/releases/tag/${{ env.latestTag }}/latest.json

          # 2. Update releases.json with proper naming convention
          yarn make:release ./latest.json

          cat ./latest.json

          # 3. Upload releases.json to gist and get the raw URL
          gistUrl=$(gh gist create --public --file ccs.json --json files -q ".files[\"latest.json\"].raw_url")
          echo "Gist URL: $gistUrl"
          echo "gistUrl=$gistUrl" >> $GITHUB_ENV
